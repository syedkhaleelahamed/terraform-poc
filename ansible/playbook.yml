---
# Ansible playbook to install and configure Jenkins on Ubuntu EC2 instance
- name: Install and Configure Jenkins on Ubuntu EC2
  hosts: all  # Define this group in your inventory
  become: true  # Use sudo privileges
  vars:
    jenkins_port: 8080

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    # Added to ensure Universe repository is enabled
    - name: Ensure Universe repository is enabled
      apt_repository:
        repo: "deb http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }} universe"
        state: present

    # Modified to be more robust with retries
    - name: Install dependencies
      apt:
        name:
          - openjdk-11-jdk
          - apt-transport-https
          - gnupg
        state: present
        update_cache: yes
      register: java_install
      retries: 3
      delay: 5
      until: java_install is success

    # Fallback to default-jdk if openjdk-11-jdk fails
    - name: Install default JDK as fallback
      apt:
        name: default-jdk
        state: present
      when: java_install is failed

    - name: Add Jenkins repository key
      shell: |
        mkdir -p /etc/apt/keyrings
        curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | sudo tee /etc/apt/keyrings/jenkins-keyring.asc > /dev/null
      check_mode: false

    - name: Add Jenkins repository
      shell: |
        echo "deb [signed-by=/etc/apt/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/" | sudo tee /etc/apt/sources.list.d/jenkins.list > /dev/null
      check_mode: false

    - name: Update apt cache after adding Jenkins repository
      apt:
        update_cache: yes
      check_mode: false

    - name: Install Jenkins
      apt:
        name: jenkins
        state: present
        update_cache: yes
      check_mode: false

    - name: Check if Jenkins service exists
      command: systemctl status jenkins
      register: jenkins_status
      failed_when: false
      changed_when: false
      check_mode: false

    - name: Start Jenkins service if it exists
      service:
        name: jenkins
        state: started
        enabled: yes
      when: jenkins_status.rc == 0

    - name: Wait for Jenkins to start up if service exists
      wait_for:
        port: "{{ jenkins_port }}"
        delay: 10
        timeout: 300
      when: jenkins_status.rc == 0

    - name: Get Jenkins initial admin password if service exists
      command: cat /var/lib/jenkins/secrets/initialAdminPassword
      register: jenkins_admin_password
      changed_when: false
      failed_when: false
      when: jenkins_status.rc == 0

    - name: Display Jenkins initial admin password if available
      debug:
        msg: "Jenkins initial admin password: {{ jenkins_admin_password.stdout }}"
      when: jenkins_status.rc == 0 and jenkins_admin_password.rc == 0

    - name: Configure Jenkins firewall
      ufw:
        rule: allow
        port: "{{ jenkins_port }}"
        proto: tcp

    - name: Allow SSH through firewall
      ufw:
        rule: allow
        port: 22
        proto: tcp

    - name: Enable UFW
      ufw:
        state: enabled
        policy: deny
  handlers:
    - name: restart jenkins
      service:
        name: jenkins
        state: restarted
