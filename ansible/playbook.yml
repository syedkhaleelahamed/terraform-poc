---
- name: Configure Apache on Ubuntu EC2
  hosts: all
  become: yes
  vars:
    apache_pkg: apache2
    web_root: /var/www/html
    jenkins_gpg_key_url: "https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key"
    jenkins_repo_url: "https://pkg.jenkins.io/debian-stable binary/"

  tasks:
    - name: Update APT cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install Apache package
      apt:
        name: "{{ apache_pkg }}"
        state: present
    - name: Install required packages (openjdk-21-jre, fontconfig)
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present # Ensures the package is installed
      loop:
        - openjdk-21-jre
        - fontconfig

    # --- New Task: Check Java Version ---
    - name: Verify Java version
      ansible.builtin.command:
        _raw_params: java -version # The command to execute
      register: java_version_output # Store the command's output in this variable
      changed_when: false # This task doesn't change anything on the system, so mark it as 'ok' 
   # --- Jenkins Installation ---
    - name: Ensure /usr/share/keyrings directory exists
      ansible.builtin.file:
        path: /usr/share/keyrings
        state: directory
        mode: '0755'

    - name: Download Jenkins GPG key
      ansible.builtin.get_url:
        url: "{{ jenkins_gpg_key_url }}"
        dest: /usr/share/keyrings/jenkins-keyring.asc
        mode: '0644'
        force: yes

    - name: Add Jenkins apt repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] {{ jenkins_repo_url }}"
        state: present
        filename: jenkins
        update_cache: yes

    - name: Install Jenkins
      ansible.builtin.apt:
        name: jenkins
        state: present
        force: yes
    - name: Verify Jenkins installation
      ansible.builtin.command: jenkins --version
      register: jenkins_version_output
      changed_when: false
    - name: Display Jenkins version
      ansible.builtin.debug:
        var: jenkins_version_output.stdout_lines
      notify:
        - Start and Enable Jenkins
    
      
    - name: Ensure Apache is running & enabled
      service:
        name: "{{ apache_pkg }}"
        state: started
        enabled: yes
      when: not ansible_check_mode  # Skip this task when in check mode

    - name: Deploy custom index.html
      copy:
        dest: "{{ web_root }}/index.html"
        content: |
          <!DOCTYPE html>
          <html>
          <body>
            <h1>Hello from Ansible!</h1>
            <p>Deployed via Spacelift</p>
          </body>
          </html>
      notify: Reload Apache

  handlers:
    - name: Reload Apache
      service:
        name: "{{ apache_pkg }}"
        state: reloaded
      when: not ansible_check_mode  # Also skip the handler when in check mode
